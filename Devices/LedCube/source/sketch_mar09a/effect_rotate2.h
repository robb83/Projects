void effect_rotate2_step()
{
  static char states[] =
  {
    // /
    0x37, 0xEC,
    0x37, 0xEC,
    0x37, 0xEC,
    0x37, 0xEC,
    
    // -
    0x0F, 0xF0,
    0x0F, 0xF0,
    0x0F, 0xF0,
    0x0F, 0xF0,
    
    // \
    0xCE, 0x73,
    0xCE, 0x73,
    0xCE, 0x73,
    0xCE, 0x73,
    0xCE, 0x73,
    
    // |
    0x66, 0x66,
    0x66, 0x66,
    0x66, 0x66,
    0x66, 0x66,
    
    //
    0xFF, 0x00,
    0xFF, 0xF0,
    0x0F, 0xFF,
    0x00, 0xFF,           
    
    0x00, 0x00,
    0xFF, 0xFF,
    0xFF, 0xFF,
    0x00, 0x00,
    
    0x00, 0xFF,
    0x0F, 0xFF,
    0xFF, 0xF0,
    0xFF, 0x00,  

    0x0F, 0xF0,
    0x0F, 0xF0,
    0x0F, 0xF0,
    0x0F, 0xF0,
    
    //
    0xCC, 0xCC,
    0xEE, 0xEE,
    0x77, 0x77,
    0x33, 0x33,
    
    0x66, 0x66,
    0x66, 0x66,
    0x66, 0x66,
    0x66, 0x66,

    0x33, 0x33,
    0x77, 0x77,
    0xEE, 0xEE,
    0xCC, 0xCC,
    
    0x00, 0x00,
    0xFF, 0xFF,
    0xFF, 0xFF,
    0x00, 0x00,    
  };
  
  static uint32_t lastUpdate = 0;
  static int counter = 0;
  static int s = 0;
    
  // v√°runk kicsit
  if ((millis() - lastUpdate) <= 150)
    return;
  lastUpdate = millis();
  
  display_extract(states + (s * 8), 8);
  ++counter;
  
  if (counter > 17)
  {
    counter = 0;
    s = 0;
  } 
  else if (counter > 11)
  {
    s = (s + 1) % 12;
    if (s < 8) s = 8;
  } 
  else if (counter > 5)
  {
    s = (s + 1) % 8;
    if (s < 4) s = 4;
  } 
  else   
  {
    s = (s + 1) % 4;
  }
}
  
