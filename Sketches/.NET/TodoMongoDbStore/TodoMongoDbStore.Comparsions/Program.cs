using System;
using MongoDB.Driver;
using MongoDB.Driver.Builders;
using MongoDB.Bson;
using System.Diagnostics;
using System.Text;

namespace TodoMongoDbStore.Comparsions
{
	class MainClass
	{
		static MongoDatabase db;
		static System.Security.Cryptography.MD5 md5Instance;

		// http://stackoverflow.com/questions/311165/how-do-you-convert-byte-array-to-hexadecimal-string-and-vice-versa
		public static string ByteArrayToString(byte[] ba)
		{
			StringBuilder hex = new StringBuilder(ba.Length * 2);
			foreach (byte b in ba)
				hex.AppendFormat("{0:x2}", b);
			return hex.ToString();
		}

		public static String CreateMD5String(String content) {
			if (md5Instance == null)
				md5Instance = System.Security.Cryptography.MD5.Create ();

			return ByteArrayToString(md5Instance.ComputeHash (Encoding.UTF8.GetBytes (content)));
		}

		static void EvalVsFindMd5() {
			EvalFindOneMd5 test = new EvalFindOneMd5 (db);

			test.Eval (100, "53e3400de59f82160d9dce38", "8/7/2014 8:59:57 AM 0049992");
			test.Find (100, "53e3400de59f82160d9dce38", "8/7/2014 8:59:57 AM 0049992");
			test.Eval (100, "53e3400de59f82160d9dce38", "8/7/2014 8:59:57 AM 0049992");
			test.Find (100, "53e3400de59f82160d9dce38", "8/7/2014 8:59:57 AM 0049992");
		}

		static void EvalVsFind() {
			EvalFindOne test = new EvalFindOne (db);

			test.Eval (100);
			test.Find (100);
			test.Eval (100);
			test.Find (100);
		}

		static void PopulateData ()
		{
			BsonDocument todo;
			MongoCollection<BsonDocument> todos = db.GetCollection ("todos");

			Stopwatch watch = new Stopwatch ();
			watch.Start ();

			int insert = 100000;
			while(insert-- > 0) {
				// id generated by server
				String salt = insert.ToString ("0000000");
				String description = DateTime.UtcNow.ToString () + " " + salt;

				todo = new BsonDocument ();
				todo.Add ("created", DateTime.UtcNow);
				todo.Add ("status", false);
				todo.Add ("description", description);
				todo.Add ("salt", salt);
				todo.Add ("hash", CreateMD5String (description + ":" + salt));
				todo.Add ("visited", 0);

				todos.Insert (todo);
			}

			watch.Stop ();
			Console.WriteLine ("PopulateDate(): {0}", watch.Elapsed);
		}

		public static void Main (string[] args)
		{
			var client = new MongoClient ("mongodb://localhost:27017/todos");
			var server = client.GetServer ();
			db = server.GetDatabase ("todos");

			if (db == null) {
				Console.WriteLine ("Connection failed.");
				return;
			}

//			db.DropCollection ("todos");
//			var todoCollection = db.GetCollection ("todos");
//			// quick order by date
//			todoCollection.CreateIndex ("created");
//			// enable fulltext search
//			todoCollection.CreateIndex (IndexKeys.Text ("description"));
//
//			PopulateData ();

			EvalVsFind ();
			EvalVsFindMd5 ();
		}
	}
}
