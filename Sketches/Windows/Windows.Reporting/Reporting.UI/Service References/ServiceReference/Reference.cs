//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Reporting.UI.ServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPartnerDataSource", ReplyAction="http://tempuri.org/IService/GetPartnerDataSourceResponse")]
        Reporting.Shared.DataSources.PartnerDataSource GetPartnerDataSource();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPartnerDataSource", ReplyAction="http://tempuri.org/IService/GetPartnerDataSourceResponse")]
        System.Threading.Tasks.Task<Reporting.Shared.DataSources.PartnerDataSource> GetPartnerDataSourceAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSavedReport", ReplyAction="http://tempuri.org/IService/GetSavedReportResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Reporting.Shared.DataSources.PartnerDataSource))]
        Reporting.Shared.DataSources.BaseDataSource GetSavedReport(int reportID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSavedReport", ReplyAction="http://tempuri.org/IService/GetSavedReportResponse")]
        System.Threading.Tasks.Task<Reporting.Shared.DataSources.BaseDataSource> GetSavedReportAsync(int reportID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GenerateSavedReportAsPDF", ReplyAction="http://tempuri.org/IService/GenerateSavedReportAsPDFResponse")]
        byte[] GenerateSavedReportAsPDF(int reportID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GenerateSavedReportAsPDF", ReplyAction="http://tempuri.org/IService/GenerateSavedReportAsPDFResponse")]
        System.Threading.Tasks.Task<byte[]> GenerateSavedReportAsPDFAsync(int reportID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : Reporting.UI.ServiceReference.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<Reporting.UI.ServiceReference.IService>, Reporting.UI.ServiceReference.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Reporting.Shared.DataSources.PartnerDataSource GetPartnerDataSource() {
            return base.Channel.GetPartnerDataSource();
        }
        
        public System.Threading.Tasks.Task<Reporting.Shared.DataSources.PartnerDataSource> GetPartnerDataSourceAsync() {
            return base.Channel.GetPartnerDataSourceAsync();
        }
        
        public Reporting.Shared.DataSources.BaseDataSource GetSavedReport(int reportID) {
            return base.Channel.GetSavedReport(reportID);
        }
        
        public System.Threading.Tasks.Task<Reporting.Shared.DataSources.BaseDataSource> GetSavedReportAsync(int reportID) {
            return base.Channel.GetSavedReportAsync(reportID);
        }
        
        public byte[] GenerateSavedReportAsPDF(int reportID) {
            return base.Channel.GenerateSavedReportAsPDF(reportID);
        }
        
        public System.Threading.Tasks.Task<byte[]> GenerateSavedReportAsPDFAsync(int reportID) {
            return base.Channel.GenerateSavedReportAsPDFAsync(reportID);
        }
    }
}
